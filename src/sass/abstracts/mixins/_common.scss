
//
// Mixins
// --------------------------------------------------

//
// Px to Em Mixin
//

@function em($px, $base: $font-size-base) {
  @return ($px / $base) * 1em;
}

//
// Font-Face Mixin
//

@mixin font-face($font-name, $font-folder, $font-file-name, $font-weight : normal, $font-style : normal) {
  @font-face {
    font-family: $font-name;
    src: url("fonts/#{$font-folder}/#{$font-file-name}.eot");
    src: url("fonts/#{$font-folder}/#{$font-file-name}.eot?#iefix") format("embedded-opentype"),
         url("fonts/#{$font-folder}/#{$font-file-name}.woff") format("woff"),
         url("fonts/#{$font-folder}/#{$font-file-name}.ttf") format("truetype"),
         url("fonts/#{$font-folder}/#{$font-file-name}.svg##{$font-file-name}") format("svg");
    font-weight: $font-weight; font-style: $font-style;}
}

//
// Font Face Mixin for modern browsers
// IE 9+
//

@mixin font-face-modern ($font-name, $font-folder, $font-file-name, $font-weight : normal, $font-style : normal) {
  @font-face {
    font-family: $font-name;
    src: url("fonts/#{$font-folder}/#{$font-file-name}.woff2") format("woff2"), // Modern Browsers
         url("fonts/#{$font-folder}/#{$font-file-name}.woff") format("woff"), // Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
         url("fonts/#{$font-folder}/#{$font-file-name}.ttf") format("truetype"); // Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
    font-weight: $font-weight; font-style: $font-style;
  }
}


//
// We use this to create isosceles triangles
// $triangle-size - Used to set border-size. No default, set a px or em size.
// $triangle-color - Used to set border-color which makes up triangle. No default
// $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right

@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}


//
// Retina Image
//
// $image2x - 2x Resim url adresi Örn 'img/logo-retina.png'
// $width - Resim genişliği
// $height - Resim yüksekliği

@mixin image-retina($image2x, $width2x, $height2x) {

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min--moz-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-device-pixel-ratio: 2),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
    background-image: url($image2x);
    background-size: $width $height;
  }
}

//
// Gaps
// -------------------------

@mixin make-utility-gaps() {
  @each $pos in map-keys($g-gaps) {
    $gap: map-get($g-gaps, $pos);
    $position: "";

    @if not($pos == normal) {
      $position: "-" + $pos;
    }

    &-bottom#{$position} {
      margin-bottom: map-get($gap, x);
    }

    &-left#{$position} {
      margin-left: map-get($gap, y);
    }

    &-right#{$position} {
      margin-right: map-get($gap, y);
    }
  }
}


//
// Pads
// -------------------------

@mixin make-utility-pads() {
  @each $pos in map-keys($g-pads) {
    $pad: map-get($g-pads, $pos);
    $position: "";

    @if not($pos == normal) {
      $position: "-" + $pos;
    }

    &-ends#{$position} {
      padding-top: $pad;
      padding-bottom: $pad;
    }

    &-top#{$position} {
      padding-top: $pad;
    }

    &-bottom#{$position} {
      padding-bottom: $pad;
    }
  }
}
