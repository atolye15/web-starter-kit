//
// Gaps
//
// stylelint-disable max-nesting-depth
// -------------------------

@mixin make-utility-gaps() {
  @each $pos in map-keys($g-gaps) {
    $gap: map-get($g-gaps, $pos);
    $position: '';

    @if not($pos == normal) {
      $position: '-' + $pos;

      &#{$position} {
        margin: $gap;

        @include make-utility-responsive() {
          margin: $gap;
        }
      }
    } @else {
      margin: $gap;

      @include make-utility-responsive() {
        margin: $gap;
      }
    }

    &-top#{$position} {
      margin-top: map-get($gap, y);

      @include make-utility-responsive() {
        margin-top: map-get($gap, y);
      }
    }

    &-bottom#{$position} {
      margin-bottom: map-get($gap, y);

      @include make-utility-responsive() {
        margin-bottom: map-get($gap, y);
      }
    }

    &-ends#{$position} {
      margin-top: map-get($gap, y);
      margin-bottom: map-get($gap, y);

      @include make-utility-responsive() {
        margin-top: map-get($gap, y);
        margin-bottom: map-get($gap, y);
      }
    }

    &-left#{$position} {
      margin-left: map-get($gap, x);

      @include make-utility-responsive() {
        margin-left: map-get($gap, x);
      }
    }

    &-right#{$position} {
      margin-right: map-get($gap, x);

      @include make-utility-responsive() {
        margin-right: map-get($gap, x);
      }
    }

    &-sides#{$position} {
      margin-right: map-get($gap, x);
      margin-left: map-get($gap, x);

      @include make-utility-responsive() {
        margin-right: map-get($gap, x);
        margin-left: map-get($gap, x);
      }
    }
  }
}
